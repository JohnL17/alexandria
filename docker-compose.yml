version: "3"
services:
  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=alexandria
      # following option is a must to configure on production system:
      # https://hub.docker.com/_/postgres
      # - POSTGRES_PASSWORD=
    volumes:
      - dbdata:/var/lib/postgresql/data
  alexandria:
    image: projectcaluma/alexandria
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
    environment:
      - DATABASE_HOST=db
      # following options are a must to configure on production system:
      # https://docs.djangoproject.com/en/2.1/ref/settings/#std:setting-SECRET_KEY
      # - SECRET_KEY=
      # https://docs.djangoproject.com/en/2.1/ref/settings/#allowed-hosts
      # - ALLOWED_HOSTS=
      # https://docs.djangoproject.com/en/2.1/ref/settings/#password
      # same as postgres password above
      # - DATABASE_PASSWORD=
  minio:
    image: minio/minio:latest@sha256:7f84f4d07cf0d3562911c6b072e1183436fbc3cad8ccef8157ec5c27456ed452
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
    environment:
      - MINIO_ACCESS_KEY=very
      - MINIO_SECRET_KEY=secret
      - MINIO_NOTIFY_WEBHOOK_ENABLE_ALEXANDRIA=on
      - MINIO_NOTIFY_WEBHOOK_ENDPOINT_ALEXANDRIA=https://your-endpoint.tdl
    command: server data
  mc:
    image: minio/mc:latest@sha256:43282b6ff47d3b6386c7b522e651af2492fef75e996302c9f10ee7a352e23748
    restart: on-failure
    environment:
      - MINIO_ACCESS_KEY=very
      - MINIO_SECRET_KEY=secret
    # You might need to override the entrypoint in docker-compose.override.yml to reflect your setup
    entrypoint: >
      /bin/sh -c "
      mc config host add dc-minio http://minio:9000 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY} --api S3v4;
      mc mb dc-minio/alexandria-media;
      mc event add dc-minio/alexandria-media arn:minio:sqs::ALEXANDRIA:webhook --event put;
      mc event list dc-minio/alexandria-media;"
    depends_on:
      - minio

volumes:
  dbdata:
  minio_data:
